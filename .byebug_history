c
new_password_path(resource_name)
c
current_user
c
new_user_registration_path()
new_user_registration_path(resource_name)
new_password_path(resource_name)
new_user_registration_path(resource_name)
resource_name
resource_name3
resource_name
c
@daily_status.last.update(daily_status_params)
@daily_status =DailyStatus.last.find_by_id params[:id]
DailyStatus.last
@daily_status.last
@daily_status.last.update(daily_status_params)
@daily_status =DailyStatus.find_by_id params[:id]
c
daily_status = current_user.daily_statuses.create(date: date, daily_status: params[:daily_status])
daily_status = current_user.daily_statuses.create(date: params[date], daily_status: params[:daily_status])
date = Date.today
daily_status = current_user.daily_statuses.date.create(date, daily_status: params[:daily_status])
daily_status = current_user.daily_statuses.create(date, daily_status: params[:daily_status])
daily_status = current_user.daily_statuses.create(date: params[:date], daily_status: params[:daily_status])
 date = Date.today
c
dailystatus.date.now
dailystatus.date
daily_status_url
daily_status.date
dailystatus_id
c
 params[:date]
'date', params[:date]
c
params
 params[:date]
date
params[:date]
form.hidden_field('date', params[:date]
c
 form.date_select :date, { :discard_day => true, :discard_month => true, :discard_year => true }
c
 daily_status = current_user.daily_statuses.create(date: params[:DateTime], daily_status: params[:daily_status])
 daily_status = current_user.daily_statuses.create(date: params[:DateTime.now], daily_status: params[:daily_status])
DateTime.now
:DateTime.now
DateTime
daily_status = current_user.daily_statuses.create(date: params[:DateTime.now], daily_status: params[:daily_status])
c
v
DateTime.now
Datetime.now
datetime.now
current_user.daily_statuses.create(date: params[:datetime.now], daily_status: params[:daily_status])
current_user.daily_statuses.create(date: params[:date.now], daily_status: params[:daily_status])
current_user.daily_statuses.create(date: params[:date], daily_status: params[:daily_status])
c
 button_to "checkout_time", user_attendances_path(user_id: current_user.id), data: { turbo_method: :post }
button_to "checkout_time", user_attendance_path(attendance:{user_id: current_user.id}), method: :put
checkout_time", user_attendance_path(attendance:{user_id: current_user.id}), method: :put
attendance
attendance:{user_id: current_user.id}
c
===========================
c
params
c
 button_to "checkout_time", user_attendance_path, data: { turbo_method: :put }
c
button_to "checkout_time", user_attendances_path, data: { turbo_method: :put }
user_attendances_path
c
params
user_attendance_path(current_user.id)
user_attendance_path
user_attendance
/users/attendances/:id
/users/:user_id/attendances/:id
c
Attendance.last&.checkin_time.nil? 
checkout_time
checkin_time
c
Attendance.last&.checkin_time.nil?
c
"checkin_time
c
 redirect_to user_attendances_path(current_user.id)
c
user_attendances_path
user_path(attendance)
continue
nc
n
c
n
 user_attendances_path(user_id: current_user.id)
 c
 Attendance.last&.checkout_time.nil?
button_to "checkin_time", user_attendances_path(user_id: current_user.id), data: { turbo_method: :post } 
c
button_to "checkout_time", user_attendances_path, data: { turbo_method: :put }
button_to "checkin_time", user_attendances_path(user_id: current_user.id), data: { turbo_method: :post }
Attendance.last&.checkout_time.nil?
c
Attendance.lacst&.checkout_time.nil?
Attendance.last&.checkout_time.nil?
 button_to "checkin_time", user_attendances_path(user_id: current_user.id), data: { turbo_method: :post }
Attendance.last&.checkout_time.nil?
Attendance.last&.checkin_time.nil?
c
Attendance.last&.checkin_time.nil?
Attendance.last&.checkout_time.nil?
c
button_to "checkout_time", user_attendances_path, data: { turbo_method: :put }
button_to "checkin_time", user_attendances_path(user_id: current_user.id), data: { turbo_method: :post } 
Attendance.last&.checkout_time.nil?
c
Attendance.last&.checkout_time.nil?
c
@attendances
 current_user.attendances
 @attendances = current_user.attendances.order(:checkin_time).page params[:page]
c
 @attendance = current_user.attendances.order(:checkin_time).page params[:page]
 @attendances = current_user.attendance.order(:checkin_time).page params[:page]
 @attendances = current_user.attendances.order(:checkin_time).page params[:page]
params
c
params
 redirect_to  user_attendance_path(current_user)
c
 redirect_to  user_attendance_path(current_user)
 redirect_to  user_attendance_path
current_user.attendances.create(checkin_time: Time.zone.now)
c
params
c
cc
c
cc
c
Attendance.all
Attendance
Attendance.last
Attendance.last.checkout_time.nil?
c
 Attendance.last.(:checkout_time).nil?
c
Attendance.last.checkout_time.nil?
Attendance.last.nil?
continue
C
link_to "checkin_time", user_attendance_path(user_id: current_user.id), data: { turbo_method: :post }
 Attendance.last.nil?
else
c
link_to "checkout_time", user_attendance_path(user_id: current_user.id), data: { turbo_method: :put }
<%= link_to "checkout_time", user_attendance_path(user_id: current_user.id), data: { turbo_method: :put } %>
link_to "checkin_time", user_attendances_path(user_id: current_user.id), data: { turbo_method: :post } 
Attendance.last.checkin_time.nil?
Attendance.last.checkout_time.nil?
c
form.collection_select :Role.all
Role.all
role_id
:role_type
:roll_type
:id
form.collection_select :role_id, Role.all, :id, :role_type
form.collection_select :Role.all, :id, :role_type
form.collection_select : Role.all, :id, :role_type
form.collection_select :role_id, Role.all, :role_type
form.collection_select :role_id, Role.all, :id, :role_type
collection_select 
 form.collection_select
c
n
request.commit_flash
n
previous_renderer
self.renderer
n
params
c
redirect_to users_path
c
redirect_to @user
redirect_to @users
redirect_to users_path
redirect_to root_path
redirect_to users_path
c
redirect_to users_path
redirect_to @users
redirect_to @user
 @user.update(user_params)
@user = current_user
User.find(params[:id])
@user
c
 @users = User.all
c
 @user = current_user
c
paginate @attendances
paginate @attendance
paginate @attendances
render  @attendances
c
@attendances = current_user.attendances.order(:checkin_time).page params[:page]
order(:checkin_time).page params[:page]
page params[:page]
 @attendances = current_user.attendances.order(:checkin_time).page params[:page]
c
DateTime.now
DailyStatus(:Datetime.now)
DailyStatus(:Date.now)
DailyStatus
daily_status = current_user.daily_statuses.create(date: params[:DateTime.now], daily_status: params[:daily_status,:DateTime.now])
daily_status = current_user.daily_statuses.create(date: params[:DateTime.now], daily_status: params[:daily_status,: DateTime.now])
daily_status = current_user.daily_statuses.create(date: params[:date.now], daily_status: params[:daily_status])
daily_status = current_user.daily_statuses.create(date: params[:DateTime.now], daily_status: params[:daily_status])
 DateTime.now
date.now
datetime.now
todaytime.now
c
 current_user.daily_statuses.
    Date.today.create(date: params[:date], daily_status: params[:daily_status])
c
daily_status = current_user.daily_statuses.todays_date.create( DateTime.now.beginning_of_week)
 DateTime.now.beginning_of_week
daily_status = current_user.daily_statuses.create( DateTime.now.beginning_of_week)
daily_status = current_user.daily_statuses.create( DateTime.now.beginning_of_week, daily_status: params[:daily_status])
 DateTime.now
DailyStatus. DateTime.now.beginning_of_week
DailyStaus. DateTime.now.beginning_of_week
 DateTime.now.beginning_of_week
checkout_time
datetime.now
c
c'
DailyStatus.today_date
DailyStatus.today
DailyStatus.Today
DailyStatus.date
DailyStatus
current_user.daily_statuses.Today_Date.create(date: params[:date], daily_status: params[:daily_status])
current_user.daily_statuses.today_date.create(date: params[:date], daily_status: params[:daily_status])
current_user.daily_statuses.create(date: params[:date], daily_status: params[:daily_status])
c
user_attendances_path(user_id: current_user.id)
